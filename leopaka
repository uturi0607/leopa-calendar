<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <title>レオパ健康記録カレンダー</title>
  <style>
    body { font-family: sans-serif; margin: 20px; }
    table { border-collapse: collapse; width: 100%; table-layout: fixed; }
    th, td { border: 1px solid #aaa; padding: 8px; text-align: center; vertical-align: top; height: 100px; overflow: hidden; position: relative; }
    .day { cursor: pointer; }
    .modal, .info-modal { display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border: 1px solid #ccc; padding: 20px; z-index: 10; max-width: 90vw; max-height: 90vh; overflow-y: auto; }
    .overlay { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 5; }
    .nav-buttons { margin-bottom: 10px; }
    .nav-buttons button, .nav-buttons select { margin-right: 10px; }
    .birthday-icon { position: absolute; top: 2px; left: 2px; font-size: 16px; color: red; z-index: 2; }
    .feed-day { background-color: #e0ffe0; }
    .day-content { font-size: 12px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  </style>
</head>
<body>
  <h1>レオパ健康記録カレンダー</h1>
  <div class="nav-buttons">
    <button onclick="changeMonth(-1)">← 前の月</button>
    <select id="yearSelect" onchange="changeYear()"></select>
    <button onclick="changeMonth(1)">次の月 →</button>
    <button onclick="openInfoModal()">基本情報</button>
  </div>
  <div id="calendar"></div>

  <div class="overlay" id="overlay"></div>
  <div class="modal" id="modal">
    <h3 id="modal-date"></h3>
    <label>体重（g）: <input type="number" id="weight"></label><br><br>
    <label>エサ: <input type="text" id="food"></label><br><br>
    <label>排便: 
      <select id="poop">
        <option value="">--</option>
        <option value="○">○</option>
        <option value="×">×</option>
      </select>
    </label><br><br>
    <div id="detailDisplay" style="margin-top:10px;"></div>
    <button onclick="saveData()">保存</button>
    <button onclick="closeModal()">閉じる</button>
  </div>

  <div class="info-modal" id="infoModal">
    <h3>基本情報</h3>
    <label>名前: <input type="text" id="nameInfo"></label><br><br>
    <label>性別: <select id="genderInfo"><option value="">--</option><option value="♂">♂</option><option value="♀">♀</option></select></label><br><br>
    <label>お迎え日（誕生日）: <input type="date" id="birthdayInfo"></label><br><br>
    <button onclick="saveInfo()">保存</button>
    <button onclick="closeInfoModal()">閉じる</button>
  </div>

  <script>
    const calendar = document.getElementById('calendar');
    const modal = document.getElementById('modal');
    const overlay = document.getElementById('overlay');
    const modalDate = document.getElementById('modal-date');
    const weightInput = document.getElementById('weight');
    const foodInput = document.getElementById('food');
    const poopSelect = document.getElementById('poop');
    const yearSelect = document.getElementById('yearSelect');
    const infoModal = document.getElementById('infoModal');
    const nameInfo = document.getElementById('nameInfo');
    const genderInfo = document.getElementById('genderInfo');
    const birthdayInfo = document.getElementById('birthdayInfo');
    const detailDisplay = document.getElementById('detailDisplay');

    let selectedDate = '';
    let currentYear = new Date().getFullYear();
    let currentMonth = new Date().getMonth();

    function getInfo() {
      return JSON.parse(localStorage.getItem('leopaInfo') || '{}');
    }

    function populateYearSelector() {
      for (let y = 2020; y <= 2030; y++) {
        const option = document.createElement('option');
        option.value = y;
        option.textContent = y;
        if (y === currentYear) option.selected = true;
        yearSelect.appendChild(option);
      }
    }

    function formatDateKey(date) {
      return date.toISOString().split('T')[0];
    }

    function generateCalendar() {
      const firstDay = new Date(currentYear, currentMonth, 1);
      const lastDay = new Date(currentYear, currentMonth + 1, 0);
      const startDay = firstDay.getDay();
      const daysInMonth = lastDay.getDate();
      const info = getInfo();
      const birthday = info.birthday || '';

      let lastFeedDate = null;
      let feedDays = [];
      for (let i = 1; i <= 31; i++) {
        const checkDate = new Date(currentYear, currentMonth, i);
        const key = formatDateKey(checkDate);
        const saved = JSON.parse(localStorage.getItem(key) || '{}');
        if (saved.food) lastFeedDate = new Date(checkDate);
      }
      if (lastFeedDate) {
        const nextFeed = new Date(lastFeedDate);
        nextFeed.setDate(nextFeed.getDate() + 4);
        if (nextFeed.getMonth() === currentMonth && nextFeed.getFullYear() === currentYear) {
          feedDays.push(nextFeed.getDate());
        }
      }

      let html = `<h2>${currentYear}年 ${currentMonth + 1}月</h2><table><tr>`;
      const days = ['日','月','火','水','木','金','土'];
      days.forEach(d => html += `<th>${d}</th>`);
      html += '</tr><tr>';

      for (let i = 0; i < startDay; i++) html += '<td></td>';
      for (let d = 1; d <= daysInMonth; d++) {
        const date = new Date(currentYear, currentMonth, d);
date.setHours(0, 0, 0, 0);
        const dateStr = formatDateKey(date);
        const saved = JSON.parse(localStorage.getItem(dateStr) || '{}');
        const birthdayDate = new Date(birthday);
birthdayDate.setHours(0, 0, 0, 0);
const isBirthday = date.getTime() === birthdayDate.getTime();
        const isFeedDay = feedDays.includes(d);

        html += `<td class="day${isFeedDay ? ' feed-day' : ''}" onclick="openModal('${dateStr}')">
          ${isBirthday ? '<div class="birthday-icon">🎂</div>' : ''}
          <strong>${d}</strong><br>
          <div class="day-content">
            ${saved.weight ? `体:${saved.weight}g ` : ''}
            ${saved.food ? `餌:${saved.food} ` : ''}
            ${saved.poop ? `排:${saved.poop}` : ''}
          </div>
        </td>`;
        if ((startDay + d) % 7 === 0) html += '</tr><tr>';
      }
      html += '</tr></table>';
      calendar.innerHTML = html;
    }

    function changeMonth(delta) {
      currentMonth += delta;
      if (currentMonth < 0) {
        currentMonth = 11;
        currentYear--;
      } else if (currentMonth > 11) {
        currentMonth = 0;
        currentYear++;
      }
      updateYearSelector();
      generateCalendar();
    }

    function changeYear() {
      currentYear = parseInt(yearSelect.value);
      generateCalendar();
    }

    function updateYearSelector() {
      yearSelect.value = currentYear;
    }

    function openModal(dateStr) {
      selectedDate = dateStr;
      modalDate.textContent = `記録：${dateStr}`;
      const saved = JSON.parse(localStorage.getItem(dateStr) || '{}');
      weightInput.value = saved.weight || '';
      foodInput.value = saved.food || '';
      poopSelect.value = saved.poop || '';
      detailDisplay.innerHTML =
        (saved.weight ? `体重: ${saved.weight}g<br>` : '') +
        (saved.food ? `餌: ${saved.food}<br>` : '') +
        (saved.poop ? `排便: ${saved.poop}<br>` : '');
      modal.style.display = 'block';
      overlay.style.display = 'block';
    }

    function closeModal() {
      modal.style.display = 'none';
      overlay.style.display = 'none';
    }

    function saveData() {
      const data = {
        weight: weightInput.value,
        food: foodInput.value,
        poop: poopSelect.value
      };
      localStorage.setItem(selectedDate, JSON.stringify(data));
      closeModal();
      generateCalendar();
    }

    function openInfoModal() {
      const info = getInfo();
      nameInfo.value = info.name || '';
      genderInfo.value = info.gender || '';
      birthdayInfo.value = info.birthday || '';
      infoModal.style.display = 'block';
      overlay.style.display = 'block';
    }

    function closeInfoModal() {
      infoModal.style.display = 'none';
      overlay.style.display = 'none';
    }

    function saveInfo() {
      const info = {
        name: nameInfo.value,
        gender: genderInfo.value,
        birthday: birthdayInfo.value
      };
      localStorage.setItem('leopaInfo', JSON.stringify(info));
      closeInfoModal();
      generateCalendar();
    }

    populateYearSelector();
    generateCalendar();
  </script>
</body>
</html>
